calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" |
tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" |
tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}  # First install and load in pacman to R
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot","jsonlite")
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", na.strings = "NA")
str(iat_data_Partcipant5)
summary(iat_data_Partcipant5)
iat_data2_Partcipant5 <- iat_data_Partcipant5 [iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity',
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
iat_data2_Partcipant5$expectedCategory <- as.factor(iat_data2_Partcipant5$expectedCategory)
iat_data2_Partcipant5$expectedCategoryAsDisplayed <- as.factor(iat_data2_Partcipant5$expectedCategoryAsDisplayed)
iat_data2_Partcipant5$leftCategory <- as.factor(iat_data2_Partcipant5$leftCategory)
iat_data2_Partcipant5$rightCategory <- as.factor(iat_data2_Partcipant5$rightCategory)
column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" |
tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" |
tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
setwd("~/Desktop/psy1903/stats")
dir.create('data_cleaning')
dir.create('data_cleaning/output')
dir.create('data_cleaning/scripts')
sdir.create('data_cleaning/data')
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}  # First install and load in pacman to R
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot","jsonlite")
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", na.strings = "NA")
str(iat_data_Partcipant5)
summary(iat_data_Partcipant5)
iat_data2_Partcipant5 <- iat_data_Partcipant5 [iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity',
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
iat_data2_Partcipant5$expectedCategory <- as.factor(iat_data2_Partcipant5$expectedCategory)
iat_data2_Partcipant5$expectedCategoryAsDisplayed <- as.factor(iat_data2_Partcipant5$expectedCategoryAsDisplayed)
iat_data2_Partcipant5$leftCategory <- as.factor(iat_data2_Partcipant5$leftCategory)
iat_data2_Partcipant5$rightCategory <- as.factor(iat_data2_Partcipant5$rightCategory)
column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" |
tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" |
tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}  # First install and load in pacman to R
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot", "jsonlite")
setwd("~/Desktop/psy1903/stats")
dir.create('data_cleaning')
dir.create('data_cleaning/output')
dir.create('data_cleaning/scripts')
sdir.create('data_cleaning/data')
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot", "jsonlite")
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", na.strings = "NA")
str(iat_data_Partcipant5)
summary(iat_data_Partcipant5)
iat_data2_Partcipant5 <- iat_data_Partcipant5 [iat_data_Partcipant5$expectedCategory == 'nature or serenity'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity',
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
iat_data2_Partcipant5$expectedCategory <- as.factor(iat_data2_Partcipant5$expectedCategory)
iat_data2_Partcipant5$expectedCategoryAsDisplayed <- as.factor(iat_data2_Partcipant5$expectedCategoryAsDisplayed)
iat_data2_Partcipant5$leftCategory <- as.factor(iat_data2_Partcipant5$leftCategory)
iat_data2_Partcipant5$rightCategory <- as.factor(iat_data2_Partcipant5$rightCategory)
column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" |
tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" |
tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
setwd("~/Desktop/psy1903/stats")
dir.create('data_cleaning')
dir.create('data_cleaning/output')
dir.create('data_cleaning/scripts')
dir.create('data_cleaning/data')
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts")
# Load packages
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse", "rstudioapi", "lme4", "emmeans", "psych", "corrplot", "jsonlite")
# Load data
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", na.strings = "NA")
# Subset data
iat_data2_Partcipant5 <- iat_data_Partcipant5[iat_data_Partcipant5$expectedCategoryAsDisplayed %in%
c('nature or serenity', 'school or anxiety', 'nature or anxiety'),
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
# Convert columns to factor
column_names <- c("expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[, column_name] <- as.factor(iat_data2_Partcipant5[, column_name])
}
# Convert rt to numeric
iat_data2_Partcipant5$rt <- as.numeric(iat_data2_Partcipant5$rt)
# Define d-score function
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" |
tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" |
tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
# Load packages
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse", "rstudioapi", "lme4", "emmeans", "psych", "corrplot", "jsonlite")
# Load data
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, stringsAsFactors = FALSE, sep = ",", na.strings = "NA")
# Subset data
iat_data2_Partcipant5 <- iat_data_Partcipant5[iat_data_Partcipant5$expectedCategoryAsDisplayed %in%
c('nature or serenity', 'school or anxiety', 'nature or anxiety'),
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
setwd("~/Desktop/psy1903/stats")
dir.create("data_cleaning")
dir.create("data_cleaning/output")
dir.create("data_cleaning/scripts")
dir.create("data_cleaning/data")
setwd("~/Desktop/psy1903/stats/data_cleaning/scripts/")
if (!require("pacman")) {install.packages("pacman"); require("pacman")}
p_load("tidyverse","rstudioapi","lme4","emmeans","psych","corrplot", "jsonlite")
iat_data_Partcipant5 <- read.csv("~/Desktop/psy1903/osfstorage-archive/eco-emotions-2024-11-05-22-39-51.csv", header = TRUE, na.strings = "NA")
str(iat_data_Partcipant5)
summary(iat_data_Partcipant5)
iat_data2_Partcipant5 <- iat_data_Partcipant5 [iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity',
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
iat_data2_Partcipant5$expectedCategory <- as.factor(iat_data2_Partcipant5$expectedCategory)
iat_data2_Partcipant5$expectedCategoryAsDisplayed <- as.factor(iat_data2_Partcipant5$expectedCategoryAsDisplayed)
iat_data2_Partcipant5$leftCategory <- as.factor(iat_data2_Partcipant5$leftCategory)
iat_data2_Partcipant5$rightCategory <- as.factor(iat_data2_Partcipant5$rightCategory)
column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" | tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" | tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
d_score_result <- calculate_IAT_dscore(iat_data2_Partcipant5)
iat_data2_Partcipant5$rt <- round(as.numeric(iat_data2_Partcipant5$rt), 0)
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
iat_data2_Partcipant5 <- iat_data_Partcipant5 [iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or serenity'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'nature or anxiety'|
iat_data_Partcipant5$expectedCategoryAsDisplayed == 'school or serenity',
c("trial_index", "rt", "response", "word", "expectedCategory", "expectedCategoryAsDisplayed", "leftCategory", "rightCategory", "correct")]
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
iat_data2_Partcipant5$expectedCategory <- as.factor(iat_data2_Partcipant5$expectedCategory)
iat_data2_Partcipant5$expectedCategoryAsDisplayed <- as.factor(iat_data2_Partcipant5$expectedCategoryAsDisplayed)
iat_data2_Partcipant5$leftCategory <- as.factor(iat_data2_Partcipant5$leftCategory)
iat_data2_Partcipant5$rightCategory <- as.factor(iat_data2_Partcipant5$rightCategory)
column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
for (column_name in column_names) {
iat_data2_Partcipant5[,column_name] <- as.factor(iat_data2_Partcipant5[,column_name])
}
iat_data2_Partcipant5$rt <- round(as.numeric(iat_data2_Partcipant5$rt), 0)
str(iat_data2_Partcipant5)
summary(iat_data2_Partcipant5)
calculate_IAT_dscore <- function(data) {
tmp <- data[data$rt >= 300, ]
congruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or serenity" | tmp$expectedCategoryAsDisplayed == "school or anxiety", ]
incongruent_trials <- tmp[tmp$expectedCategoryAsDisplayed == "nature or anxiety" | tmp$expectedCategoryAsDisplayed == "school or serenity", ]
mean_congruent <- mean(congruent_trials$rt, na.rm = TRUE)
mean_incongruent <- mean(incongruent_trials$rt, na.rm = TRUE)
pooled_sd <- sd(tmp$rt, na.rm = TRUE)
d_score <- (mean_incongruent - mean_congruent) / pooled_sd
return(d_score)
}
d_score_result <- calculate_IAT_dscore(iat_data2_Partcipant5)
print(d_score_result)
directory_path <- "~/Desktop/psy1903/osfstorage-archive-"
files_list <- list.files(path = directory_path, pattern = "\\.csv$", full.names = TRUE)
dScores <- data.frame(matrix(nrow = length(files_list), ncol = 2))
colnames(dScores) <- c("participant_ID", "d_score")
i = 1
for (files in files_list) {
tmp <- read.csv(files_list, header = TRUE, na.strings = "NA")
participant_ID <- tools::file_path_sans_ext(basename(file))
dScores[i, "participant_ID"] <- participant_ID
dScores[i, "d-score"] <- calculate_IAT_dscore(tmp)
rm(tpm)
i <- i + 1
}
write.csv(dScores,"~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
for (files in files_list) {
tmp <- read.csv(files_list, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
participant_ID <- tools::file_path_sans_ext(basename(file))
dScores[i, "participant_ID"] <- participant_ID
dScores[i, "d-score"] <- calculate_IAT_dscore(tmp)
rm(tpm)
i <- i + 1
}
write.csv(dScores,"~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
directory_path <- "~/Desktop/psy1903/osfstorage-archive"
files_list <- list.files(path = directory_path, pattern = "\\.csv$", full.names = TRUE)
dScores <- data.frame(matrix(nrow = length(files_list), ncol = 2))
colnames(dScores) <- c("participant_ID", "d_score")
i = 1
for (files in files_list) {
tmp <- read.csv(files_list, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
participant_ID <- tools::file_path_sans_ext(basename(file))
dScores[i, "participant_ID"] <- participant_ID
dScores[i, "d-score"] <- calculate_IAT_dscore(tmp)
rm(tpm)
i <- i + 1
}
write.csv(dScores,"~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
for (files in files_list) {
tmp <- read.csv(files_list, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
participant_ID <- tools::file_path_sans_ext(basename(file))
dScores[i, "participant_ID"] <- participant_ID
dScores[i, "d-score"] <- calculate_IAT_dscore(tmp)
rm(tmp)
i <- i + 1
}
write.csv(dScores,"~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
directory_path <- "~/Desktop/psy1903/osfstorage-archive"
files_list <- list.files(path = directory_path, pattern = "\\.csv$", full.names = TRUE)
d_scores <- data.frame(matrix(nrow = length(files_list), ncol = 2))
colnames(d_scores) <- c("participant_ID", "d_scores")
i = 1
for (files in files_list) {
tmp <- read.csv(files_list, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
participant_ID <- tools::file_path_sans_ext(basename(file_list))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
rm(tmp)
i <- i + 1
}
write.csv(dScores,"~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
directory_path <- "~/Desktop/psy1903/osfstorage-archive"
files_list <- list.files(path = directory_path, pattern = "\\.csv$", full.names = TRUE)
d_scores <- data.frame(matrix(nrow = length(files_list), ncol = 2))
colnames(d_scores) <- c("participant_ID", "d_scores")
i = 1
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")  # Use 'files' here
tmp$rt <- round(as.numeric(tmp$rt), 0)
participant_ID <- tools::file_path_sans_ext(basename(files))  # Use 'files' instead of 'file_list'
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
rm(tmp)
i <- i + 1
}
write.csv(d_scores, "~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
()
warnings()
