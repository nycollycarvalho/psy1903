questionnaire <- round(as.numeric(questionnnaire), 0)
write.csv(d_scores, "~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
score_questionnaire <- function(data){
if (!is.data.frame(data))
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
str(questionnaire)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
return(score)
}
write.csv (score, "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
print(score)
score_questionnaire <- function(data){
data <- read.csv(files, header = TRUE, na.strings = "NA")
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
str(questionnaire)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
return(score)
}
print(score)
print(score)
print(json_data)
print(score)
score_questionnaire <- function(data){
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
print(json_data)
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
str(questionnaire)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
return(score)
}
print(score)
score_questionnaire <- function(data){
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
print(json_data)
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
str(questionnaire)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
return(score)
}
i = 1
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
warnings()
View(d_scores)
i = 1
for (files in files_list) {
tmp <- read.csv(files)
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
print(score)
print(score)
i = 1
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
i = 1
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
score_questionnaire <- function(data){
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
print(score)
return(score)
}
i = 1
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
write.csv (score, "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (score, "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
print(score)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#column_names <- c("expectedCategory, expectedCategoryAsDisplayed, leftCategory, rightCategory")
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
write.csv (score_questionnaire(tmp), "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (score_questionnaire(tmp), "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (score_questionnaire, "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (tmp$score_questionnaire, "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (score_questionnaire(tmp), "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
write.csv (score_questionnaire(tmp), "~/Desktop/psy1903/stats/data_cleaning/data/questionnaire_scores.csv", row.names = FALSE)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp_correct <-
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
warnings()
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
participant_ID <- tools::file_path_sans_ext(basename(files))
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
#tmp_correct <-
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
#tmp_correct <-
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
print( tmp$expectedCategory)
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
str(tmp)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
str(tmp)
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- 'placeholder'
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "prime"] <- whichprime
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "prime"] <- whichprime(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- tmp[tmp$trialType == whichprime]
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- tmp[tmp$trialType == whichprime]
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
prime_label <- tmp$primeLabel[tmp$trialType == whichprime]
d_scores[i, "whichprime"] <- prime_label(tmp)
prime_label <- tmp$primeLabel[tmp$trialType == 'whichprime']
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
prime_label <- (tmp$primeLabel[tmp$trialType == 'whichprime'])
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- (tmp$primeLabel[tmp$trialType == 'whichprime'])
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label(tmp)
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- (tmp$primeLabel[tmp$trialType == 'whichprime'])
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
write.csv(d_scores, "~/Desktop/psy1903/stats/data_cleaning/data/participant_dScores.csv", row.names = FALSE)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- (tmp$primeLabel[tmp$trialType == 'whichprime'])
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
View(d_scores)
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- tmp[tmp$trialType == "prime", "whichPrime"]
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
d_score <- round(as.numeric(d_score), 0)
prime_label <- tmp[tmp$trialType == "prime", "whichPrime"]
for (files in files_list) {
tmp <- read.csv(files, header = TRUE, na.strings = "NA")
tmp$rt <- round(as.numeric(tmp$rt), 0)
tmp$correct <- as.logical(tmp$correct)
tmp$expectedCategory <- as.factor(tmp$expectedCategory)
tmp$expectedCategoryAsDisplayed <- as.factor(tmp$expectedCategoryAsDisplayed)
tmp$leftCategory <- as.factor(tmp$leftCategory)
tmp$rightCategory <- as.factor(tmp$rightCategory)
#str(tmp) use when checking if as.factor/as.logical is working
participant_ID <- tools::file_path_sans_ext(basename(files))
prime_label <- tmp[tmp$trialType == "prime", "whichPrime"]
d_scores[i, "participant_ID"] <- participant_ID
d_scores[i, "whichprime"] <- prime_label
d_scores[i, "d_scores"] <- calculate_IAT_dscore(tmp)
d_scores[i, "questionnaire"] <- score_questionnaire(tmp)
rm(tmp)
i <- i + 1
}
d_scores$whichPrime <- as.factor(d_scores$whichPrime)
d_scores$whichprime <- as.factor(d_scores$whichprime)
d_scores$d_score <- as.numeric(d_scores$d_score)
d_scores$questionnaire <- as.numeric(d_scores$questionnnaire)
d_scores$whichprime <- as.factor(d_scores$whichprime)
d_scores$d_score <- as.numeric(d_scores$d_score)
d_scores$questionnaire <- as.numeric(d_scores$questionnaire)
d_scores$participant_ID <- as.character(d_scores$participant_ID)
str(d_scores)
## Initiate function called score_questionnaire that accepts a single argument called `data`. Within this function...
score_questionnaire <- function(data){
## Extract questionnaire data cell
json_data <- data[data$trialType == "questionnaire", "response"]
## Use fromJSON to convert from JSON to data frame
questionnaire <- fromJSON(json_data)
questionnaire <- as.data.frame(questionnaire)
## Convert to numeric
questionnaire <- as.data.frame(lapply(questionnaire, as.numeric))
## Calculate & return questionnaire score (mean)
score <- rowMeans(questionnaire, na.rm = TRUE)
return(score)
}
